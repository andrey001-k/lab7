const int M = 20, N = 20; // максимальна кількість рядків і стовпців

// Функція введення матриці
void get_matr(int in_matr[M][N], int &rows, int &cols) {
    do {
        cout << "Enter rows count (2-20): ";
        cin >> rows;
        cout << "Enter columns count (2-20): ";
        cin >> cols;
    } while (cols < 2  cols > N  rows < 2 || rows > M);
    
    cout << "Enter elements: " << endl;
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            cin >> in_matr[i][j];
}

// Функція обчислення суми елементів у стовпцях з парними номерами без умовного оператора
void sum_even_columns(const int matr[M][N], int rows, int cols) {
    cout << "Sum of elements in even-numbered columns:" << endl;
    for (int j = 1; j < cols; j += 2) { // починаємо з другого стовпця (індекс 1)
        int sum = 0;
        for (int i = 0; i < rows; i++) {
            sum += matr[i][j]; // Коригуємо підрахунок суми
        }
        cout << sum << " ";
    }
    cout << endl;
}

// Функція виведення матриці
void show_matr(const int out_matr[M][N], const int rows, const int cols) {
    cout << endl << "Matrix: " << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++)
            cout << out_matr[i][j] << "\t";
        cout << endl;
    }
}

// Основна функція
void task() {
    int matr1[M][N]; // оголошення матриці
    int rows, cols; // реальні розміри матриці
    get_matr(matr1, rows, cols); // введення матриці
    show_matr(matr1, rows, cols); // виведення матриці
    sum_even_columns(matr1, rows, cols); // обчислення сум
}

int main() {
    task();
    return 0;
}